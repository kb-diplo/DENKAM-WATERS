# Generated by Django 5.2.4 on 2025-07-27 09:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumption_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Rate per unit of water consumed (in KES)', max_digits=10, validators=[django.core.validators.MinValueValidator(0, message='Rate cannot be negative'), django.core.validators.MaxValueValidator(10000, message='Rate is too high')], verbose_name='Consumption Rate')),
                ('penalty_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Penalty amount applied to overdue bills', max_digits=10, validators=[django.core.validators.MinValueValidator(0, message='Penalty cannot be negative'), django.core.validators.MaxValueValidator(10000, message='Penalty is too high')], verbose_name='Penalty Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Billing Metric',
                'verbose_name_plural': 'Billing Metrics',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meter_number', models.BigIntegerField(blank=True, help_text='Unique meter number for the client', null=True, unique=True, verbose_name='Meter Number')),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Middle Name')),
                ('contact_number', models.CharField(blank=True, help_text='Format: +254...', max_length=13, null=True, verbose_name='Phone Number')),
                ('address', models.TextField(help_text='Full physical address of the client', max_length=500)),
                ('status', models.CharField(choices=[('Connected', 'Connected'), ('Disconnected', 'Disconnected'), ('Pending', 'Pending')], default='Pending', help_text='Connection status of the client', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_meter_reader', models.ForeignKey(blank=True, help_text='Meter reader responsible for this client', limit_choices_to={'role': 'METER_READER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_clients', to=settings.AUTH_USER_MODEL)),
                ('name', models.OneToOneField(help_text='Link to the user account for authentication', on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to=settings.AUTH_USER_MODEL, verbose_name='User Account')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'ordering': ['name__last_name', 'name__first_name'],
            },
        ),
        migrations.CreateModel(
            name='WaterBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading', models.DecimalField(decimal_places=2, help_text='Current meter reading', max_digits=10, null=True, verbose_name='Meter Reading')),
                ('meter_consumption', models.DecimalField(decimal_places=2, help_text='Units consumed (current reading - previous reading)', max_digits=10, null=True, verbose_name='Consumption (units)')),
                ('status', models.CharField(choices=[('Paid', 'Paid'), ('Pending', 'Pending'), ('Overdue', 'Overdue')], default='Pending', help_text='Payment status of the bill', max_length=20, verbose_name='Status')),
                ('duedate', models.DateField(help_text='Due date for payment', null=True, verbose_name='Due Date')),
                ('penaltydate', models.DateField(blank=True, help_text='Date when penalty will be applied if bill is not paid', null=True, verbose_name='Penalty Date')),
                ('bill', models.DecimalField(blank=True, decimal_places=2, help_text='Bill amount before penalties', max_digits=10, null=True, verbose_name='Base Bill Amount')),
                ('checkout_request_id', models.CharField(blank=True, help_text='Payment gateway reference ID', max_length=100, null=True, verbose_name='Payment Reference')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this bill was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this bill was last updated', verbose_name='Updated At')),
                ('created_by', models.ForeignKey(blank=True, help_text='Staff member who created this bill', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_bills', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('name', models.ForeignKey(help_text='Client this bill belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='water_bills', to='main.client', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'Water Bill',
                'verbose_name_plural': 'Water Bills',
                'ordering': ['-created_at'],
            },
        ),
    ]
